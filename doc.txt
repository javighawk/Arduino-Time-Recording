# Arduino-Time-Recording

DESCRIPTION:
============
The TimeRecord module is used to measure the execution time of a piece of code. In a real-time environment, since this measurement will be done several times, the class will be able to return not only the last time recorded, but the average time over the last 1000 measurements, and the maximum of all measurements since the object was initialized. All recorded times are in MICROSECONDS.

INSTALL:
============
1. Click on "Clone or Download" and then "Download ZIP".
2. Unzip the downloaded file.
3. Go to "path-to-Arduino-location/libraries/" and create a folder named "TimeRecord".
4. Copy the files unzipped before into the recently created "TimeRecord" folder.

EXAMPLE OF USAGE
=====
#include "TimeRecord.h"       // Include the module's header

TimeRecord myTR("LABEL");     // Create a TimeRecord object. The constructor needs a label, which will be the record's ID.

myTR.trigger();               // Start recording time

/*** CODE TO BE MEASURED ***/

myTR.stop();                  // Stop recording time

String label = myTR.getLabel();          // Retrieve the label of this TimeRecord (in this example, the returnin string should be 'LABEL')
unsigned long rec = myTR.getTime();      // Retrieve the last recorded time
unsigned long rec = myTR.getAvgTime();   // Get the average time over the last 1000 recordings
unsigned long rec = myTR.getMaxTime();   // Get the maximum record overall

myTR.resetMaxTRec();          // Call this function to set the maximum record to 0


OTHER COMMENTS
=====
The user can give some personalization to this module:
- To change the number of measurements over which the average time is computed, modify the variable "AVG_RECORDS" in "src/BXD_Controller/TimeRecord.h"
- To measure MILLISECONDS instead of MICROSECONDS, on the file "src/BXD_Controller/TimeRecord.cpp" change all "micros()" functions with "millis()".
